{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": " API 2.0",
    "description": "A sample application   API NetCore 2.1.3",
    "termsOfService": "Private",
    "contact": {
      "name": "Ale SA",
      "email": "xxxx@somewhere.com"
    }
  },
  "paths": {
    "/api/v2/Pets": {
      "get": {
        "tags": [ "Pets" ],
        "summary": "Read All",
        "operationId": "ApiV2PetsGet",
        "consumes": [],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Gets or sets sort use: +property,-property",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter: propertyname,propertyname,propertyname",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "PageNumber",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "PageSize",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeProperties",
            "in": "query",
            "description": "DependentEntityProperty,DependentEntityProperty",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": { "$ref": "#/definitions/Api213.V2.Dto.PetFullDto" }
            }
          },
          "400": {
            "description": "BadRequest parameters",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          }
        }
      },
      "put": {
        "tags": [ "Pets" ],
        "summary": "Replace Objet",
        "operationId": "ApiV2PetsPut",
        "consumes": [ "application/json" ],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "aPet",
            "in": "body",
            "description": "",
            "required": false,
            "schema": { "$ref": "#/definitions/Api213.V2.Dto.PetDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved.",
            "schema": { "$ref": "#/definitions/Api213.V2.Dto.PetDto" }
          },
          "400": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          },
          "404": {
            "description": "NotFound",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          }
        }
      },
      "post": {
        "tags": [ "Pets" ],
        "summary": "Create new object",
        "operationId": "ApiV2PetsPost",
        "consumes": [ "application/json" ],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "aPet",
            "in": "body",
            "description": "",
            "required": false,
            "schema": { "$ref": "#/definitions/Api213.V2.Dto.PetDto" }
          }
        ],
        "responses": {
          "201": {
            "description": "successfully Created.",
            "schema": { "$ref": "#/definitions/Api213.V2.Dto.PetDto" }
          },
          "400": {
            "description": "BadRequest.",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          },
          "405": {
            "description": "Unable to create.",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          }
        }
      }
    },
    "/api/v2/Pets/{petName}": {
      "get": {
        "tags": [ "Pets" ],
        "summary": "Get by Name",
        "operationId": "ApiV2PetsByPetNameGet",
        "consumes": [],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "petName",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved.",
            "schema": { "$ref": "#/definitions/Api213.V2.Dto.PetDto" }
          },
          "404": {
            "description": "NotFound.",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          },
          "400": {
            "description": "is invalid.",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          }
        }
      },
      "delete": {
        "tags": [ "Pets" ],
        "summary": "Delete one",
        "operationId": "ApiV2PetsByPetNameDelete",
        "consumes": [],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "petName",
            "in": "path",
            "description": "Name of pet",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved.",
            "schema": { "$ref": "#/definitions/Api213.V2.Dto.PetDto" }
          },
          "404": {
            "description": "NotFound",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          }
        }
      },
      "patch": {
        "tags": [ "Pets" ],
        "summary": "JsonPatch to Apply the changes for  properties .\r\n{\"op\" : \"replace\",\r\n\"path\" : \"property\",\r\n\"value\" : \"newvalue\"}",
        "operationId": "ApiV2PetsByPetNamePatch",
        "consumes": [ "application/json-patch+json", "application/json" ],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "petName",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch",
            "in": "body",
            "description": "JsonPatchDocument",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": { "$ref": "#/definitions/Microsoft.AspNetCore.JsonPatch.Operations.Operation" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "operation successfully.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": { "$ref": "#/definitions/Api213.V2.Dto.PetDto" }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          },
          "400": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          },
          "405": {
            "description": "Unable to update.",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          }
        }
      }
    },
    "/api/v2/Pets/Search": {
      "get": {
        "tags": [ "Pets" ],
        "summary": "Search",
        "operationId": "ApiV2PetsSearchGet",
        "consumes": [],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "namelike",
            "in": "query",
            "description": "by name like",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Gets or sets sort use: +property,-property",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter: propertyname,propertyname,propertyname",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "PageNumber",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "PageSize",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "includeProperties",
            "in": "query",
            "description": "DependentEntityProperty,DependentEntityProperty",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": { "$ref": "#/definitions/Api213.V2.Dto.PetDto" }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          },
          "400": {
            "description": "Status400 BadRequest",
            "schema": { "$ref": "#/definitions/Api213.V2.Exception.IErrorDetails" }
          }
        }
      }
    }
  },
  "definitions": {
    "Api213.V2.Dto.PetFullDto": {
      "description": "PetOutPut",
      "required": [ "name" ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/Api213.V2.Dto.OwnerDto",
          "description": ""
        }
      }
    },
    "Api213.V2.Dto.OwnerDto": {
      "description": "OwnerDto",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Api213.V2.Exception.IErrorDetails": {
      "description": "",
      "type": "object",
      "properties": {
        "httpStatusCode": {
          "format": "int32",
          "description": "HttpStatusCode",
          "type": "integer"
        },
        "httpMethod": {
          "description": "HttpMethod",
          "type": "string"
        },
        "errors": {
          "description": "",
          "type": "object",
          "additionalProperties": {
            "uniqueItems": false,
            "type": "array",
            "items": { "type": "string" }
          },
          "readOnly": true
        },
        "type": {
          "description": "",
          "type": "string"
        },
        "title": {
          "description": "",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "detail": {
          "description": "",
          "type": "string"
        },
        "instance": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Api213.V2.Dto.PetDto": {
      "description": "PetOutPut",
      "required": [ "name" ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Microsoft.AspNetCore.JsonPatch.Operations.Operation": {
      "type": "object",
      "properties": {
        "value": { "type": "object" },
        "path": { "type": "string" },
        "op": { "type": "string" },
        "from": { "type": "string" }
      }
    }
  },
  "tags": [
    {
      "name": "Pets",
      "description": "Pets Controller"
    }
  ]
}