{
  "swagger": "2.0",
  "info": {
    "version": "2.0",
    "title": " API 2.0",
    "description": "A sample application   API versioning.",
    "termsOfService": "Private",
    "contact": {
      "name": " SA",
      "email": "xxxx@somewhere.com"
    }
  },
  "paths": {
    "/api/v2/Pets": {
      "get": {
        "tags": [ "Pets" ],
        "summary": "Read All",
        "operationId": "ApiV2PetsGet",
        "consumes": [],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Gets or sets sort use: +property,-property",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter: propertyname,propertyname,propertyname",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "PageNumber",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "PageSize",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "DependentEntityProperty,DependentEntityProperty",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": { "$ref": "#/definitions/PetFullDto" }
            }
          },
          "400": {
            "description": "BadRequest parameters",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          }
        }
      },
      "put": {
        "tags": [ "Pets" ],
        "summary": "Replace Objet",
        "operationId": "ApiV2PetsPut",
        "consumes": [ "application/json" ],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "aPet",
            "in": "body",
            "description": "",
            "required": false,
            "schema": { "$ref": "#/definitions/PetDto" }
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved.",
            "schema": { "$ref": "#/definitions/PetDto" }
          },
          "400": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          },
          "404": {
            "description": "NotFound",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          }
        }
      },
      "post": {
        "tags": [ "Pets" ],
        "summary": "Create new object",
        "operationId": "ApiV2PetsPost",
        "consumes": [ "application/json" ],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "aPet",
            "in": "body",
            "description": "",
            "required": false,
            "schema": { "$ref": "#/definitions/PetDto" }
          }
        ],
        "responses": {
          "201": {
            "description": "Successfully Created and Location",
            "schema": { "$ref": "#/definitions/PetDto" }
          },
          "400": {
            "description": "Unable to create.",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          },
          "500": {
            "description": "Unable to create.Exception.",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          }
        }
      }
    },
    "/api/v2/Pets/{petName}": {
      "get": {
        "tags": [ "Pets" ],
        "summary": "Get by Name",
        "operationId": "ApiV2PetsByPetNameGet",
        "consumes": [],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "petName",
            "in": "path",
            "description": "name",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved.",
            "schema": { "$ref": "#/definitions/PetDto" }
          },
          "404": {
            "description": "NotFound.",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          },
          "400": {
            "description": "is invalid.",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          }
        }
      },
      "delete": {
        "tags": [ "Pets" ],
        "summary": "Delete one",
        "operationId": "ApiV2PetsByPetNameDelete",
        "consumes": [],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "petName",
            "in": "path",
            "description": "Name of pet",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved.",
            "schema": { "$ref": "#/definitions/PetDto" }
          },
          "404": {
            "description": "NotFound",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          },
          "409": {
            "description": "Exception",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          }
        }
      },
      "patch": {
        "tags": [ "Pets" ],
        "summary": "JsonPatch to Apply the changes for  properties based rfc7386\r\n{\"op\" : \"replace\",     \"path\" : \"property\",     \"value\" : \"newvalue\"}",
        "operationId": "ApiV2PetsByPetNamePatch",
        "consumes": [ "application/json-patch+json", "application/json" ],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "petName",
            "in": "path",
            "description": "id",
            "required": true,
            "type": "string"
          },
          {
            "name": "patch",
            "in": "body",
            "description": "JsonPatchDocument",
            "required": false,
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": { "$ref": "#/definitions/Operation" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "operation successfully.",
            "schema": { "$ref": "#/definitions/PetDto" }
          },
          "404": {
            "description": "NotFound",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          },
          "400": {
            "description": "BadRequest",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          },
          "412": {
            "description": "Format Error to patch.",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          },
          "409": {
            "description": "Unable to update.",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          }
        }
      }
    },
    "/api/v2/Pets/Search": {
      "get": {
        "tags": [ "Pets" ],
        "summary": "Search",
        "operationId": "ApiV2PetsSearchGet",
        "consumes": [],
        "produces": [ "application/json", "application/problem+json" ],
        "parameters": [
          {
            "name": "namelike",
            "in": "query",
            "description": "by name like",
            "required": false,
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Gets or sets sort use: +property,-property",
            "required": false,
            "type": "string"
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Filter: propertyname,propertyname,propertyname",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "PageNumber",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "count",
            "in": "query",
            "description": "PageSize",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "embed",
            "in": "query",
            "description": "DependentEntityProperty,DependentEntityProperty",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successfully retrieved.",
            "schema": {
              "uniqueItems": false,
              "type": "array",
              "items": { "$ref": "#/definitions/PetDto" }
            }
          },
          "404": {
            "description": "NotFound",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          },
          "400": {
            "description": "Status400 BadRequest",
            "schema": { "$ref": "#/definitions/IErrorDetails" }
          }
        }
      }
    }
  },
  "definitions": {
    "PetFullDto": {
      "description": "PetOutPut",
      "required": [ "name" ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "owner": {
          "$ref": "#/definitions/OwnerDto",
          "description": ""
        }
      }
    },
    "OwnerDto": {
      "description": "OwnerDto",
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "IErrorDetails": {
      "description": "A machine-readable format for specifying errors in HTTP API responses based on\r\nhttps://tools.ietf.org/html/rfc780 and https://tools.ietf.org/html/rfc2616",
      "type": "object",
      "properties": {
        "httpMethod": {
          "description": "HttpMethod Verbs [rfc2616]\r\nThe set of common methods for HTTP/1.1 is defined below. Although this set can\r\nbe expanded, additional methods cannot be assumed to share the same semantics \r\nfor separately extended clients and servers.\r\nrfc2616-sec9.html#sec9",
          "type": "string"
        },
        "errors": {
          "description": "Gets the validation errors associated for request",
          "type": "object",
          "additionalProperties": {
            "uniqueItems": false,
            "type": "array",
            "items": { "type": "string" }
          },
          "readOnly": true
        },
        "type": {
          "description": "A URI reference [RFC3986] that identifies the problem type. This specification\r\nencourages that, when dereferenced, it provide human-readable documentation for\r\nthe problem type (e.g., using HTML [W3C.REC-html5-20141028]). When this member\r\nis not present, its value is assumed to be \"about :blank\".",
          "type": "string"
        },
        "title": {
          "description": "A short, human-readable summary of the problem type.It SHOULD NOT change from\r\noccurrence to occurrence of the problem, except for purposes of localization(e.g.,\r\nusing proactive content negotiation; see[RFC7231], Section 3.4).",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "The HTTP status code([RFC7231], Section 6) generated by the origin server\r\nEach Status-Code is described below, including a description of which method(s) \r\nit can follow and any metainformation required in the response.\r\nrfc2616-sec10.html#sec10",
          "type": "integer"
        },
        "detail": {
          "description": "A human-readable explanation specific to this occurrence of the problem.",
          "type": "string"
        },
        "instance": {
          "description": "A URI reference that identifies the specific occurrence of the problem.It may\r\nor may not yield further information if dereferenced.",
          "type": "string"
        }
      }
    },
    "PetDto": {
      "description": "PetOutPut",
      "required": [ "name" ],
      "type": "object",
      "properties": {
        "id": {
          "format": "int32",
          "description": "",
          "type": "integer"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Operation": {
      "type": "object",
      "properties": {
        "value": { "type": "object" },
        "path": { "type": "string" },
        "op": { "type": "string" },
        "from": { "type": "string" }
      }
    }
  },
  "tags": [
    {
      "name": "Pets",
      "description": "Pets Controller"
    }
  ]
}