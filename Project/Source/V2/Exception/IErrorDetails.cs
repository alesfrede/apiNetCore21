using System.Collections.Generic;

namespace Api213.V2.Exception
{
    /// <summary>
    ///  A machine-readable format for specifying errors in HTTP API responses based on
    ///  https://tools.ietf.org/html/rfc780 and https://tools.ietf.org/html/rfc2616
    /// </summary>
    public interface IErrorDetails
    {
        /// <summary>
        /// HttpMethod Verbs [rfc2616]
        /// The set of common methods for HTTP/1.1 is defined below. Although this set can
        /// be expanded, additional methods cannot be assumed to share the same semantics 
        /// for separately extended clients and servers.
        /// rfc2616-sec9.html#sec9
        /// </summary>
        string HttpMethod { get; set; }

        /// <summary>
        ///  Gets the validation errors associated for request
        /// </summary>
        IDictionary<string, string[]> Errors { get; }

        /// <summary>
        ///  A URI reference [RFC3986] that identifies the problem type. This specification
        ///  encourages that, when dereferenced, it provide human-readable documentation for
        ///  the problem type (e.g., using HTML [W3C.REC-html5-20141028]). When this member
        ///  is not present, its value is assumed to be "about :blank".
        /// </summary>
        string Type { get; set; }

        /// <summary>
        /// A short, human-readable summary of the problem type.It SHOULD NOT change from
        /// occurrence to occurrence of the problem, except for purposes of localization(e.g.,
        /// using proactive content negotiation; see[RFC7231], Section 3.4).
        /// </summary>
        string Title { get; set; }

        /// <summary>
        /// The HTTP status code([RFC7231], Section 6) generated by the origin server
        /// Each Status-Code is described below, including a description of which method(s) 
        /// it can follow and any metainformation required in the response.
        /// rfc2616-sec10.html#sec10
        /// </summary>
        int? Status { get; set; }

        /// <summary>
        /// A human-readable explanation specific to this occurrence of the problem.
        /// </summary>
        string Detail { get; set; }

        /// <summary>
        /// A URI reference that identifies the specific occurrence of the problem.It may
        /// or may not yield further information if dereferenced.
        /// </summary>
        string Instance { get; set; }
    }
}